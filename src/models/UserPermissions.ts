/* tslint:disable */
/* eslint-disable */
/**
 * User account and session management
 * Provides HTTP endpoints to manage User Accounts and User Sessions.
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LegacyRoleSchema,
    LegacyRoleSchemaFromJSON,
    LegacyRoleSchemaFromJSONTyped,
    LegacyRoleSchemaToJSON,
    RolesOnOrganization,
    RolesOnOrganizationFromJSON,
    RolesOnOrganizationFromJSONTyped,
    RolesOnOrganizationToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserPermissions
 */
export interface UserPermissions {
    /**
     * 
     * @type {Array<RolesOnOrganization>}
     * @memberof UserPermissions
     */
    organizations: Array<RolesOnOrganization>;
    /**
     * 
     * @type {Array<LegacyRoleSchema>}
     * @memberof UserPermissions
     */
    legacyRoles: Array<LegacyRoleSchema>;
}

export function UserPermissionsFromJSON(json: any): UserPermissions {
    return UserPermissionsFromJSONTyped(json, false);
}

export function UserPermissionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPermissions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'organizations': ((json['organizations'] as Array<any>).map(RolesOnOrganizationFromJSON)),
        'legacyRoles': ((json['legacyRoles'] as Array<any>).map(LegacyRoleSchemaFromJSON)),
    };
}

export function UserPermissionsToJSON(value?: UserPermissions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'organizations': ((value.organizations as Array<any>).map(RolesOnOrganizationToJSON)),
        'legacyRoles': ((value.legacyRoles as Array<any>).map(LegacyRoleSchemaToJSON)),
    };
}


