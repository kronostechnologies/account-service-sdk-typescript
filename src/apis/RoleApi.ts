/* tslint:disable */
/* eslint-disable */
/**
 * User account and session management
 * Provides HTTP endpoints to manage User Accounts and User Sessions.
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorPayload,
    ErrorPayloadFromJSON,
    ErrorPayloadToJSON,
    Role,
    RoleFromJSON,
    RoleToJSON,
} from '../models';

export interface GetRoleRequest {
    uuid: string;
}

/**
 * 
 */
export class RoleApi extends runtime.BaseAPI {

    /**
     * Get organization role for a given uuid
     */
    async getRoleRaw(requestParameters: GetRoleRequest): Promise<runtime.ApiResponse<Role>> {
        if (requestParameters.uuid === null || requestParameters.uuid === undefined) {
            throw new runtime.RequiredError('uuid','Required parameter requestParameters.uuid was null or undefined when calling getRole.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/roles/{uuid}`.replace(`{${"uuid"}}`, encodeURIComponent(String(requestParameters.uuid))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => RoleFromJSON(jsonValue));
    }

    /**
     * Get organization role for a given uuid
     */
    async getRole(requestParameters: GetRoleRequest): Promise<Role> {
        const response = await this.getRoleRaw(requestParameters);
        return await response.value();
    }

}
